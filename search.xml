<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git设置用户名和邮箱</title>
    <url>/posts/3f67efa6.html</url>
    <content><![CDATA[<p>配置<code>git</code>的用户名和密码，应该是你安装完<code>git</code>后需要做的第一件事。</p>
<p>能避免很多麻烦</p>
<h2 id="配置用户名"><a href="#配置用户名" class="headerlink" title="配置用户名"></a>配置用户名</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱:"></a>配置邮箱:</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="查看git配置信息"><a href="#查看git配置信息" class="headerlink" title="查看git配置信息"></a>查看git配置信息</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件应用</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Next主题添加搜索功能</title>
    <url>/posts/d4489ce4.html</url>
    <content><![CDATA[<p><code>hexo</code>的<code>NexT</code>主题添加搜索非常简单，而且效果很好，需要用到第三方插件<code>hexo-generator-searchdb</code>。</p>
<h2 id="安装hexo-generator-searchdb"><a href="#安装hexo-generator-searchdb" class="headerlink" title="安装hexo-generator-searchdb"></a>安装hexo-generator-searchdb</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-searchdb</span><br></pre></td></tr></table></figure>

<h2 id="修改站点配置文件-config-yml"><a href="#修改站点配置文件-config-yml" class="headerlink" title="修改站点配置文件_config.yml"></a>修改站点配置文件_config.yml</h2><p>在<code>_config.yml</code>中添加下面内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="修改NexT配置文件-config-next-yml"><a href="#修改NexT配置文件-config-next-yml" class="headerlink" title="修改NexT配置文件_config.next.yml"></a>修改NexT配置文件_config.next.yml</h2><p>搜索并修改成如下样式：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>search</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的NexT主题添加favicon</title>
    <url>/posts/2bd96118.html</url>
    <content><![CDATA[<p>折腾了半天，成功在<code>hexo</code>的<code>NexT</code>主题上应用了站点favicon，记录下具体步骤。</p>
<p>首先要说明的是，中文网站的教程，都是教你把<code>favicon.ico</code>放在<code>theme/next/source/images</code>下，但是现在<code>NexT</code>主题推出<code>npm</code>的安装方式，站点的<code>theme</code>目录下根本没有<code>next</code>文件夹。所以网上的教程早就过时了。</p>
<p>其次，<code>NexT</code>官方博客上的说明极其具有误导性。如果按照它的说明操作，无法怎么设置，都是使用主题自带的图标。具体表现在：</p>
<ul>
<li>favicon图标格式只能使用<code>.ico</code>，才能替代<code>NexT</code>主题自带的图标。而主题设置里却是使用的<code>.png</code>格式</li>
<li>没必要把主题设置里<code>favicon</code>部分全部启用，只使用<code>small</code>和<code>medium</code>即可。</li>
</ul>
<p>下面是具体设置方法</p>
<h2 id="生成favicon"><a href="#生成favicon" class="headerlink" title="生成favicon"></a>生成favicon</h2><p>准备好图片，到这个网站：<a href="https://www.bitbug.net/">https://www.bitbug.net/</a> ,分别生成<code>16x16</code>和<code>32x32</code>大小的<code>.ico</code>文件。</p>
<h2 id="存放favico"><a href="#存放favico" class="headerlink" title="存放favico"></a>存放favico</h2><p>把生成的favicon文件放在<code>hexo-site/source/images</code>目录下，<code>images</code>目录如果没有则新建。</p>
<h2 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h2><p>编辑<code>_config.next.yml</code>，修改成下面的内容：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="meta"># Site Information Settings</span></span><br><span class="line"><span class="meta"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">favicon:</span> </span><br><span class="line"><span class="symbol">  small:</span> <span class="keyword">/images/</span>favicon16.ico</span><br><span class="line"><span class="symbol">  medium:</span> <span class="keyword">/images/</span>favicon32.ico</span><br><span class="line">  <span class="meta">#apple_touch_icon: /apple-touch-icon-next.png</span></span><br><span class="line">  <span class="meta">#safari_pinned_tab: /logo.svg</span></span><br><span class="line">  <span class="meta">#android_manifest: /manifest.json</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>注意，放在<code>images</code>目录下的图片名称要和上面配置里的一一对应。</p>
<p>打开网站，强制刷新网站，即可看见效果。</p>
]]></content>
      <categories>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Iphone上设置微软日历和微软邮箱</title>
    <url>/posts/2cadad79.html</url>
    <content><![CDATA[<p>设备：iphone 14 plus</p>
<p>IOS:  16.7.2</p>
<p>微软账号：@hotmail.com </p>
<hr>
<p>折腾了一下午，终于弄好了。</p>
<h2 id="微软日历"><a href="#微软日历" class="headerlink" title="微软日历"></a>微软日历</h2><p><strong>问题</strong>：</p>
<p>添加微软账号后，无法在iphone的日历里选择使用微软日历。</p>
<p><strong>原因</strong>：</p>
<p>在iphone里添加账号的时候，邮箱类型选择了 <code>exchange</code>，而不是<code>outlook</code>。</p>
<p>解决方法：选择<code>outlook</code>类型即可。</p>
<p><img src="/../images/Iphone%E4%B8%8A%E8%AE%BE%E7%BD%AE%E5%BE%AE%E8%BD%AF%E6%97%A5%E5%8E%86%E5%92%8C%E5%BE%AE%E8%BD%AF%E9%82%AE%E7%AE%B1_171953.png"></p>
<h2 id="微软邮箱"><a href="#微软邮箱" class="headerlink" title="微软邮箱"></a>微软邮箱</h2><p><strong>问题</strong></p>
<p>iphone自带的<code>邮件</code>客户端，无法收取hotmail邮箱的邮件</p>
<p><strong>解决方法</strong>：</p>
<p>登录页面版hotmail，在<code>设置</code>–<code>同步电子邮件</code>里，关闭<code>允许设备和应用使用POP</code>即可。</p>
<p><img src="/../images/Iphone%E4%B8%8A%E8%AE%BE%E7%BD%AE%E5%BE%AE%E8%BD%AF%E6%97%A5%E5%8E%86%E5%92%8C%E5%BE%AE%E8%BD%AF%E9%82%AE%E7%AE%B1_171859.png"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>iphone</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 24.04安装Docker</title>
    <url>/posts/e1db731e.html</url>
    <content><![CDATA[<p>下面介绍安装<code>docker</code>和<code>docker-compose</code>的方法，实测支持Ubuntu 24.04</p>
<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> docker.io</span><br></pre></td></tr></table></figure>
<h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">udo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>docker-compose</span><br></pre></td></tr></table></figure>
<h2 id="当前用户可以使用docker"><a href="#当前用户可以使用docker" class="headerlink" title="当前用户可以使用docker"></a>当前用户可以使用docker</h2><p>把当前用户加入到docker组中即可:</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo</span> usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>

<p>重启系统即可。</p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu24.04开启RDP远程桌面访问</title>
    <url>/posts/c466930e.html</url>
    <content><![CDATA[<p>Ubuntu 24.04系统内建了RDP远程桌面访问，终于不用再安装设置xrdp了。</p>
<p>下面介绍设置方法</p>
<p>打开<code>设置</code>，左侧最下方找到<code>系统</code>，右侧点击<code>远程桌面</code>：<br><img src="/images/17179236170199.jpg"><br><code>桌面共享</code>这里不用管，点击<code>远程登录</code>，看下图设置：<br><img src="/images/17179236351583.jpg"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>RDP</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo安装和配置主题</title>
    <url>/posts/4f786861.html</url>
    <content><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="安装NexT主题"><a href="#安装NexT主题" class="headerlink" title="安装NexT主题"></a>安装<code>NexT</code>主题</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo-site</span><br><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>

<h3 id="启用NexT主题"><a href="#启用NexT主题" class="headerlink" title="启用NexT主题"></a>启用NexT主题</h3><p>编辑网站根目录下的<code>_config.yml</code>，在99行左右，改成下面样子</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="symbol">theme:</span> <span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<h3 id="设置Next主题的配置文件"><a href="#设置Next主题的配置文件" class="headerlink" title="设置Next主题的配置文件"></a>设置Next主题的配置文件</h3><p>站点根目录下执行</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cp</span> node_modules/hexo-theme-<span class="keyword">next</span>/_config.yml _config.<span class="keyword">next</span>.yml</span><br></pre></td></tr></table></figure>
<p>以后所有修改都使用网站根目录下的<code>_config.next.yml</code>文件。</p>
<h3 id="启用categories、archives、tags、about等链接"><a href="#启用categories、archives、tags、about等链接" class="headerlink" title="启用categories、archives、tags、about等链接"></a>启用categories、archives、tags、about等链接</h3><h4 id="修改-config-next-yml文件"><a href="#修改-config-next-yml文件" class="headerlink" title="修改_config.next.yml文件"></a>修改<code>_config.next.yml</code>文件</h4><p>在第100行左右，去掉categories、archives、tags、about前面的#，保存即可。</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  #home: / || fa fa-home</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>
<h4 id="添加相应的页面"><a href="#添加相应的页面" class="headerlink" title="添加相应的页面"></a>添加相应的页面</h4><p>以<code>categories</code>为例，其它几个链接对应着修改即可。<br>生成<code>categories</code>页面：</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> categories</span><br></pre></td></tr></table></figure>
<p>生成的页面位置：<code>网站根目录/source/categories/index.md</code><br>修改上面的<code>index.md</code>,原内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-01-25 22:37:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>添加上<code>type: &quot;categories&quot;</code>这段代码就能让主题识别该页面为分类页面了,如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-01-25 22:37:25</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>archives、tags、about等链接照着上述<code>categories</code>的例子来生成和修改<code>type</code>即可。</p>
<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;my first post&quot;</span></span><br></pre></td></tr></table></figure>
<p>文章名称中有空格，必须使用<code>&quot; &quot;</code>包括起来。</p>
<h2 id="生成博客"><a href="#生成博客" class="headerlink" title="生成博客"></a>生成博客</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>theme</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo的永久链接设置</title>
    <url>/posts/4dbd6b59.html</url>
    <content><![CDATA[<p>使用<code>hexo-abbrlink</code>插件即可。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>在<code>_config.yml</code>中修改添加下面内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> </span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span> </span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">false</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo自动摘要设置</title>
    <url>/posts/31ada5df.html</url>
    <content><![CDATA[<p><code>NexT</code>主题最新版本已经不支持自动摘要设置了，需要用的第三方插件<code>hexo-abbrlink</code></p>
<h2 id="安装hexo-exerpt"><a href="#安装hexo-exerpt" class="headerlink" title="安装hexo-exerpt"></a>安装hexo-exerpt</h2><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-excerpt <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<h2 id="设置hexo-excerpt"><a href="#设置hexo-excerpt" class="headerlink" title="设置hexo-excerpt"></a>设置hexo-excerpt</h2><p>在<code>hexo</code>的配置文件<code>_config.yml</code>中，加入下面的内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt:</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">5</span>  </span><br><span class="line">  <span class="attr">excerpt_excludes:</span> []</span><br><span class="line">  <span class="attr">more_excludes:</span> []</span><br><span class="line">  <span class="attr">hideWholePostExcerpts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>修改日版MacbookPro的键盘为英文键盘布局</title>
    <url>/posts/2c9a14c8.html</url>
    <content><![CDATA[<p>日文键盘的MacbookPro最主要的问题有两个：</p>
<ol>
<li>日常使用时，特殊符号的位置和英文键盘不一样，比如@，需要重新适应。</li>
<li>远程连接虚拟机或vps后，本机的日语键盘和远程电脑一般默认的英文键盘存在冲突。这会导致在编辑文件或输入密码时，实际输入的内容和你以为输入的内容不一致。</li>
</ol>
<p>如果只是第1个问题倒是还好，适应一番就行了。</p>
<p>但是第2个问题可太要命了，总不能把所有的远程电脑都改成日语键盘吧？先不说麻烦的问题，真要是改了，别人连接后该怎么办呢？</p>
<p>所以最佳方案，还是把MacbookPro的日语键盘改成英文键盘。</p>
<p>所幸的是，无论在外观上还是功能上，现在都已经可以完美实现了。</p>
<h2 id="外观修改"><a href="#外观修改" class="headerlink" title="外观修改"></a>外观修改</h2><p>上某宝上搜索日文键盘修正贴，25元左右，帖上即可。</p>
<h2 id="功能修改"><a href="#功能修改" class="headerlink" title="功能修改"></a>功能修改</h2><h3 id="安装karabiner-elements"><a href="#安装karabiner-elements" class="headerlink" title="安装karabiner-elements"></a>安装karabiner-elements</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">brew install karabiner-elements</span><br></pre></td></tr></table></figure>
<h3 id="修改键盘类型"><a href="#修改键盘类型" class="headerlink" title="修改键盘类型"></a>修改键盘类型</h3><p>打开karabiner-elements，在<code>Vitual keyboard</code>里，把键盘改成<code>ANSI</code>：<br><img src="/../images/%E4%BF%AE%E6%94%B9%E6%97%A5%E7%89%88MacbookPro%E7%9A%84%E9%94%AE%E7%9B%98%E4%B8%BA%E8%8B%B1%E6%96%87%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80_185035.png"></p>
<h3 id="添加规则"><a href="#添加规则" class="headerlink" title="添加规则"></a>添加规则</h3><p>访问<a href="https://ke-complex-modifications.pqrs.org/">Karabiner-Elements complex_modifications rules</a>，输入<code>jis ansi</code>,找到下图的规则，点击<code>Import</code><br><img src="/../images/%E4%BF%AE%E6%94%B9%E6%97%A5%E7%89%88MacbookPro%E7%9A%84%E9%94%AE%E7%9B%98%E4%B8%BA%E8%8B%B1%E6%96%87%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80_185115.png"></p>
<h3 id="启用规则"><a href="#启用规则" class="headerlink" title="启用规则"></a>启用规则</h3><p>打开karabiner-elements，选择Complex Modifications，右侧最下方点击Add rule，找到上面导入的规则，选择Enable All<br><img src="/../images/%E4%BF%AE%E6%94%B9%E6%97%A5%E7%89%88MacbookPro%E7%9A%84%E9%94%AE%E7%9B%98%E4%B8%BA%E8%8B%B1%E6%96%87%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80_185127.png"><br><img src="/../images/%E4%BF%AE%E6%94%B9%E6%97%A5%E7%89%88MacbookPro%E7%9A%84%E9%94%AE%E7%9B%98%E4%B8%BA%E8%8B%B1%E6%96%87%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80_185135.png"></p>
<h3 id="关于-这个符号"><a href="#关于-这个符号" class="headerlink" title="关于&#96;这个符号"></a>关于&#96;这个符号</h3><p>当键盘类型使用JIS时，使用上面的规则，此符号位于+右侧，DEL键的左侧。</p>
<p>当把日文键盘从JIS改成ANSI后，使用上面规则，此符号并没有对应的位置，需要我们手动添加。</p>
<p>看不懂没关系，照着下面做就行了。</p>
<p>这个键，对应的键值是international3，按照下图操作：<br><img src="/../images/%E4%BF%AE%E6%94%B9%E6%97%A5%E7%89%88MacbookPro%E7%9A%84%E9%94%AE%E7%9B%98%E4%B8%BA%E8%8B%B1%E6%96%87%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80_185153.png"></p>
<p>至此，日文键盘就完美修改成英文键盘布局了。</p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>键盘</tag>
      </tags>
  </entry>
  <entry>
    <title>在ubuntu 24.04上安装vmware workstation 17.5.2</title>
    <url>/posts/7d0c9221.html</url>
    <content><![CDATA[<h3 id="下载vmware内核补丁"><a href="#下载vmware内核补丁" class="headerlink" title="下载vmware内核补丁"></a>下载vmware内核补丁</h3><p>虽然是17.5.1版本的，但经实测，完全兼容17.5.2</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/mkubecek/vmware-host-modules/archive/workstation-17.5.1.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -xzf workstation-17.5.1.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="进入解压后的文件目录"><a href="#进入解压后的文件目录" class="headerlink" title="进入解压后的文件目录"></a>进入解压后的文件目录</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> vmware-host-modules-workstation-17.5.1/</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="打包需要的内容"><a href="#打包需要的内容" class="headerlink" title="打包需要的内容"></a>打包需要的内容</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -cf vmmon.tar vmmon-only/</span><br><span class="line">tar -cf vmnet.tar vmnet-only/</span><br></pre></td></tr></table></figure>
<h3 id="把打包后的文件拷贝到对应的位置"><a href="#把打包后的文件拷贝到对应的位置" class="headerlink" title="把打包后的文件拷贝到对应的位置"></a>把打包后的文件拷贝到对应的位置</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> -v vmmon.tar vmnet.tar  /usr/lib/vmware/modules/source/</span><br></pre></td></tr></table></figure>
<h3 id="开始编译需要的vmware内核组件"><a href="#开始编译需要的vmware内核组件" class="headerlink" title="开始编译需要的vmware内核组件"></a>开始编译需要的vmware内核组件</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo vmware-modconfig --console --install-all</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>软件应用</category>
      </categories>
      <tags>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>在vscode里配置hexo粘贴图片</title>
    <url>/posts/8e4647c9.html</url>
    <content><![CDATA[<p><code>hexo</code>博客是部署在<code>github</code>上的，除了域名花钱买的，其它所有资源都是用的免费的。图床当然也是如此。</p>
<p>使用<code>hexo</code>写博客，尤其是技术类的，难免要用到配图，俗话说:<strong>一图胜千言</strong>。因此有一个方便易用的图片插入方式就很重要了。</p>
<p>下面介绍使用<code>vscode</code>管理<code>hexo</code>博客时，如何方便的插图。</p>
<h2 id="安装插件Paste-Image"><a href="#安装插件Paste-Image" class="headerlink" title="安装插件Paste Image"></a>安装插件Paste Image</h2><p><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_173659.png"></p>
<p>这个插件功能很简单，就是向文章里插入图片，却有着43万的下载量，说明确实好用。经我实测，也的确好用。</p>
<h2 id="配置Paste-Image"><a href="#配置Paste-Image" class="headerlink" title="配置Paste Image"></a>配置Paste Image</h2><p>首先说明，我的博客图片组织形式如下：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">blog</span><br><span class="line"><span class="comment">-- source</span></span><br><span class="line"><span class="comment">---- _post (存放md文档)</span></span><br><span class="line"><span class="comment">---- images (存放图片)</span></span><br></pre></td></tr></table></figure>
<p>也就是把所有图片保存在<code>source</code>目录下的<code>images</code>文件夹里。</p>
<p>有两种设置方式：</p>
<h3 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h3><p>设置开关：<br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_174518.png"><br>需要设置的地方有4个，直接看图吧<br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_174611.png"><br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_174629.png"><br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_174648.png"><br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_174713.png"></p>
<h3 id="工作区设置"><a href="#工作区设置" class="headerlink" title="工作区设置"></a>工作区设置</h3><p>优点是只影响当前工作区，不影响别的地方；缺点是无法使用<code>vscode</code>自带的设置同步功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">	<span class="string">&quot;pasteImage.basePath&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;projectRoot&#125;</span>/source/_post&quot;</span>, </span><br><span class="line">	<span class="string">&quot;pasteImage.path&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;projectRoot&#125;</span>/source/images&quot;</span>,</span><br><span class="line">	<span class="string">&quot;pasteImage.namePrefix&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;currentFileNameWithoutExt&#125;</span>_&quot;</span>,</span><br><span class="line">	<span class="string">&quot;pasteImage.defaultName&quot;</span>: <span class="string">&quot;HHmmss&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看出来，其实只是把图形界面里配置的内容，写成了配置文件的形式。</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>按下<code>Ctrl</code>+<code>Alt</code>+<code>v</code>后，自动做了几件事：</p>
<ul>
<li>把图片存在在<code>source下</code>的<code>images</code>目录里。</li>
<li>自动在博客里插入图片链接</li>
<li>插入的图片名称是当前文章名+插入时间。</li>
</ul>
<p>上面的第3点很重要，即保障了图片将来的区分和管理方便，又保障了同一博客里图片名称的唯一性。<br>具体效果看图：<br><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_175306.png"></p>
<p><img src="/../images/%E5%9C%A8vscode%E9%87%8C%E9%85%8D%E7%BD%AEhexo%E7%B2%98%E8%B4%B4%E5%9B%BE%E7%89%87_175341.png"></p>
<h2 id="配图全流程管理"><a href="#配图全流程管理" class="headerlink" title="配图全流程管理"></a>配图全流程管理</h2><p>可以安装一个软件叫<code>snipaste</code>,然后就可以：</p>
<p>F1截图–&gt;<code>Ctrl</code>+<code>c</code>复制图片-&gt;vscode里<code>Ctrl</code>+<code>Alt</code>_<code>v</code>粘贴图片。</p>
<p>非常的方便和流畅。</p>
]]></content>
      <categories>
        <category>软件应用</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>vscode</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>让Lightdm的登录界面默认显示用户账号</title>
    <url>/posts/c0c4bf60.html</url>
    <content><![CDATA[<p>使用kali的xfce发行版时，发现默认设置下，登录界面不会显示你自己创建的账户。</p>
<p>类似下面的效果：<br><img src="/../images/%E8%AE%A9Lightdm%E7%9A%84%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7_184416.png"></p>
<p>如此一来，每次登录都得手动填写用户名，挺麻烦的。而我想要实现的效果是：用户名自动填写，密码手动填写。所以这和自动登录设置还是不一样的。</p>
<p>一番搜索，找到了答案。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>终端下执行下面命令：</p>
<p><code>sudo vi /etc/lightdm/lightdm.conf</code></p>
<p>在<code>103</code>左右，取消<code>greeter-hide-users=false</code>的注释:<br><img src="/../images/%E8%AE%A9Lightdm%E7%9A%84%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7_184448.png"></p>
<p>保存退出。重启后即可看到效果:<br><img src="/../images/%E8%AE%A9Lightdm%E7%9A%84%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7_184505.png"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>xfce</tag>
      </tags>
  </entry>
</search>
